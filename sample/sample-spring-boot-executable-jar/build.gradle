//-----------------------------------------------------------------------------------------
// Illustrates how to attach codekvast-javaagent.jar to a repackaged Spring Boot jar
//-----------------------------------------------------------------------------------------

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.4.2'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    codekvastagent
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    compileOnly 'org.projectlombok:lombok:1.18.16'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation project(":sample:sample-lib")
    implementation 'org.aspectj:aspectjrt:1.9.6'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    codekvastagent project(path: ":product:agent:java-agent", configuration: 'shadow')
}

build.dependsOn bootJar

task generateCodekvastConfig {
    group "Build"
    description "Generates a codekvast.conf for test"

    def configFile = file("$buildDir/codekvast.conf")

    inputs.files file("build.gradle")
    outputs.file configFile

    doLast {
        configFile.parentFile.mkdirs()
        configFile.text = """# Run Codekvast against Sample App
appName = $archivesBaseName
appVersion = 1.3
aspectjOptions = -verbose -showWeaveInfo
codeBase = build/libs/sample-spring-boot-executable-jar-1.0.0.jar
excludePackages = sample.lib.excluded
methodVisibility = all
packages = sample. , foo.bar.
tags = development, sample
bridgeAspectjMessagesToJUL = false
environment = Gradle

# serverUrl = https://api-staging.codekvast.io
httpProxyHost =   
httpProxyPort = 4711
"""
    }
}

processResources.dependsOn generateCodekvastConfig

task launchExecutableJar(type: Exec, dependsOn: [bootJar, generateCodekvastConfig, ":product:agent:java-agent:shadowJar"] ) {
    def javaVersion = sdkmanJavaVersion_11

    description "Launches the executable jar produced by bootJar with OpenJDK " + javaVersion
    group "Application"

    executable "${System.getenv('HOME')}/.sdkman/candidates/java/${javaVersion}/bin/java"
    // args "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"
    args "-javaagent:${configurations.codekvastagent.asPath}"
    args "-Dcodekvast.configuration=$generateCodekvastConfig.outputs.files.asPath"

    args "-jar", "build/libs/${archivesBaseName}-${version}.jar"
    args "--logging.level.root=INFO"
    args "--logging.level.io.codekvast=DEBUG"
}

task run {
    description "Alias for launchExecutableJar"
    group "Application"
    dependsOn launchExecutableJar
}
