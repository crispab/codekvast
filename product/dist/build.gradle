apply plugin: 'distribution'
apply plugin: 'org.kordamp.gradle.markdown'

description = 'Package codekvast-agent.zip and uploads it to http://download.codekvast.io'

distributions {

  agent {
    distributionBaseName = "codekvast-agent-$codekvastVersion"
    contents {
      from(file('src/dist/codekvast.conf')) {
        into "/"
        expand(project.properties)
      }

      from([
        tasks.getByPath(':product:agent:java-agent:javaagents'),
        file("$rootDir/RELEASE-NOTES.md"),
        file("$rootDir/LICENSE"),
      ]) {
        into "/codekvast"
      }
    }
  }
}

task fetchReleaseNotesMd(type: Sync) {
  from(rootDir) {
    include "RELEASE-NOTES.md"
  }
  into "$buildDir/markdown"
}

markdownToHtml {
  dependsOn fetchReleaseNotesMd
  sourceDir file("$buildDir/markdown")
  outputDir file("$buildDir/staging")
  inputEncoding 'UTF-8'
  outputEncoding 'UTF-8'
}

task createIndexHtml(type: Copy) {
  description "Creates index.html"
  group "publish"

  from file('src/html/index.html')
  into "$buildDir/staging"
  expand(project.properties)
}

task stageForUpload(type: Copy) {
  dependsOn agentDistZip, tasks.getByPath(':product:agent:java-agent:javaagents'), markdownToHtml, createIndexHtml

  into "$buildDir/staging"
  from("$rootDir/product/graphics/logo-feathers-60x104.png") {
    into "assets"
  }
  from "$buildDir/distributions/codekvast-agent-${codekvastVersion}.zip"
  from("$rootDir/product/agent/java-agent/build/javaagents/codekvast-javaagent-${codekvastVersion}.jar") {
    rename {
      "codekvast-agent-${codekvastVersion}.jar"
    }
  }
  doLast {
    def releaseNotesFile = new File("$buildDir/staging", "RELEASE-NOTES.html")
    def releaseNotesText = releaseNotesFile.text
    releaseNotesFile.text = """<html>
<head>
    <meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
    <meta http-equiv='x-ua-compatible' content='ie=edge'/>

    <meta name='viewport' content='width=device-width, initial-scale=1'/>
    <meta charset='utf-8'/>

    <title>Codekvast Downloads</title>

    <link rel='stylesheet' type='text/css' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css'/>
    <link rel='stylesheet' type='text/css' href='https://use.fontawesome.com/releases/v5.0.8/css/solid.css'/>
    <link rel='stylesheet' type='text/css' href='https://use.fontawesome.com/releases/v5.0.8/css/fontawesome.css'/>

    <style>
        html,
        body {
            height: 100%;
        }

        header {
            margin-top: 38px;
            margin-bottom: 2em;
        }

        div#app {
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        main {
            height: 100%;
            overflow: auto;
        }

        h3 {
            margin-top: 2em;
        }

        footer li {
            border-left: 1px solid darkblue;
        }
    </style>
</head>
<body>
<div id='app'>
    <header id='top-nav' class='container'>
        <div class='row align-items-end pt-1 pl-3'>
            <div class='col-1'>
                <a href='/'>
                    <img src='assets/logo-feathers-60x104.png' class='img' alt='logotype'/>
                </a>
            </div>
            <div class='col-11'>
                <h1>Codekvast Downloads</h1>
                <p class='small text-muted'>The Truly Dead Code Detector</p>
            </div>
        </div>
    </header>
    <main class='container'>
    $releaseNotesText
    </main>
    <footer class='bg-info small'>
        <ul class='nav justify-content-end mr-1'>
            <li class='nav-item px-3'>
                <a class='btn btn-info' href='https://www.codekvast.io'>www.codekvast.io</a>
            </li>
            <li class='nav-item px-3'>
                <a class='btn btn-info' href='/RELEASE-NOTES.html'>RELEASE-NOTES</a>
            </li>
            <li class='nav-item px-3'>
                    <span class='btn disabled'>
                        Codekvast Downloads ${codekvastDisplayVersion}
                    </span>
            </li>
        </ul>
    </footer>
</div>
</body>
</html>
"""
  }
}

task uploadToS3 {
  description "Uploads everything to $codekvastDownloadPrefix"
  group "publish"

  dependsOn stageForUpload

  doLast {
    def bucket = codekvastDownloadPrefix - 'http://' - 'https://'
    def command = "s3cmd --reduced-redundancy --progress --recursive --force put ${buildDir}/staging/ s3://${bucket}"
    logger.lifecycle(command)
    def result = command.execute().waitFor()
    assert result == 0: "Failed to execute $command"
  }
}
