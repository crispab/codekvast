apply from: "$rootDir/gradle/spring-boot-app.gradle"
apply from: "$rootDir/gradle/spring-boot-jdbc.gradle"
apply from: "$rootDir/gradle/spring-boot-web.gradle"
apply from: "$rootDir/gradle/kotlin-jdk8.gradle"
apply plugin: 'groovy'

description = 'The Codekvast dashboard'
applicationName = 'codekvast-dashboard'
archivesBaseName = 'codekvast-dashboard'
version = codekvastVersion
mainClassName = 'io.codekvast.dashboard.CodekvastDashboardApplicationKt'

apply from: "$projectDir/src/webapp2/build.gradle"
apply from: "$projectDir/src/integrationTest/build.gradle"

dependencies {
    implementation project(':product:agent:agent-model')
    implementation project(':product:server:common')
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation 'org.springframework.retry:spring-retry:1.2.4.RELEASE'
    
    runtimeOnly project(':product:server:db-migration')
}

bootJar {
    dependsOn frontendBuild

    // Spring Boot automatically serves static content from static/**

    // Output from frontendBuild
    into('static') {
        from('src/webapp2/dist/dashboard')
    }

    launchScript {
        properties([
            'initInfoProvides'        : applicationName,
            'initInfoShortDescription': 'Codekvast Dashboard',
            'initInfoDescription'     : 'Codekvast Dashboard shows the collected data',
        ])
    }
}

run {
    // dependsOn startMariadb, ":product:server:dashboard:frontendBuild", installDist, generateCodekvastConfig, ':product:agent:java-agent:shadowJar'
    dependsOn startMariadb, ":product:server:dashboard:frontendBuild"

    jvmArgs = [
        '-enableassertions',
        // "-Dcodekvast.configuration=$generateCodekvastConfig.outputs.files.asPath",
    ]

    args = ["--logging.file=$buildDir/log/${applicationName}.log",
            '--codekvast.fileImportIntervalSeconds=10',
            '--codekvast.dashboardJwtExpirationHours=-5'
    ]
}

bootRun {
    dependsOn startMariadb

    jvmArgs = run.jvmArgs
    args = run.args
}
