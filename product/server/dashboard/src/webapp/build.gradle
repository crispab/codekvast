//--- Frontend -----------------------------------------------------------------------------------

task frontendInstall(type: Exec) {
    description 'Installs the node modules and tools required for frontend development'
    group 'Frontend Development'

    workingDir file('src/webapp')
    executable 'yarn'
    args 'install'

    inputs.files file('src/webapp/package.json')
    inputs.files file('src/webapp/typings.json')
    outputs.file file('src/webapp/yarn.lock')
    outputs.dir file('src/webapp/typings')
}

task frontendTest(type: Exec) {
    description "Runs Typescript unit tests with Karma and Jasmine"
    group "Frontend Development"

    dependsOn frontendInstall
    mustRunAfter test

    def timestampFile = file("$buildDir/${name}.timestamp")

    inputs.files file('src/webapp/package.json')
    inputs.files file('src/webapp/tsconfig.json')
    inputs.files file('src/webapp/webpack.config.js')
    inputs.files fileTree('src/webapp/config')
    inputs.files fileTree('src/webapp/src')
    outputs.file timestampFile

    workingDir file('src/webapp')
    executable 'npm'
    args 'run', 'test'

    doLast {
        timestampFile.parentFile.mkdirs()
        timestampFile.text = "${java.time.Instant.now()}\n"
    }
}
check.dependsOn frontendTest

task frontendLint(type: Exec) {
    description "Runs tslint on all TypeScript sources"
    group "Frontend Development"

    dependsOn frontendInstall
    mustRunAfter test

    def timestampFile = file("$buildDir/${name}.timestamp")

    inputs.files file('src/webapp/package.json')
    inputs.files file('src/webapp/tsconfig.json')
    inputs.files file('src/webapp/tslint.json')
    inputs.files fileTree('src/webapp/config')
    inputs.files fileTree('src/webapp/src')
    inputs.property "version", codekvastDisplayVersion
    outputs.file timestampFile

    workingDir file('src/webapp')
    executable 'npm'
    args 'run', 'lint'

    doLast {
        timestampFile.parentFile.mkdirs()
        timestampFile.text = "${java.time.Instant.now()}\n"
    }
}
check.dependsOn frontendLint

task frontendStart(type: Exec) {
    description 'Starts the webpack dev server on port 8089'
    group 'Frontend Development'

    dependsOn frontendInstall

    workingDir file('src/webapp')
    executable 'npm'
    args 'start'
}

task frontendWebpack(type: Exec) {
    description "Builds the frontend webpack bundles for production"
    group "Frontend Development"
    dependsOn frontendTest

    inputs.files file('src/webapp/package.json')
    inputs.files file('src/webapp/tsconfig.json')
    inputs.files file('src/webapp/webpack.config.js')
    inputs.dir file('src/webapp/config')
    inputs.dir file('src/webapp/src')
    inputs.dir file('src/webapp/static')
    inputs.property "version", codekvastDisplayVersion

    outputs.dir file('src/webapp/dist')

    workingDir file('src/webapp')
    executable 'npm'
    args 'run', 'build'
    environment['CODEKVAST_VERSION'] = codekvastDisplayVersion
}

task frontendClean(type: Exec) {
    description "Cleans the frontend webpack bundles"
    group "Frontend Development"

    workingDir file('src/webapp')
    executable 'npm'
    args 'run', 'clean'
}

clean.dependsOn frontendClean
