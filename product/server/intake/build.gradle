apply from: "$rootDir/gradle/kotlin-jdk8.gradle"
apply plugin: 'kotlin-kapt'
apply plugin: 'io.micronaut.application'

description = 'The Codekvast Intake server'
applicationName = 'codekvast-intake'
archivesBaseName = 'codekvast-intake'
version = codekvastVersion
mainClassName = 'io.codekvast.intake.CodekvastIntakeApplicationKt'

micronaut {
    version(micronautVersion)
    runtime('netty')
    testRuntime('junit5')
    processing {
        incremental(true)
        annotations("io.codekvast.intake.*")
    }
}

dependencies {
    kapt 'io.micronaut.data:micronaut-data-processor'

    implementation project(':product:server:common-lib')
    implementation 'io.micronaut:micronaut-validation'
    implementation 'io.micronaut.kotlin:micronaut-kotlin-runtime'
    implementation 'io.micronaut:micronaut-runtime'
    implementation 'javax.annotation:javax.annotation-api'
    implementation 'io.micronaut:micronaut-http-client'
    implementation 'io.micronaut:micronaut-management'
    implementation 'io.micronaut.micrometer:micronaut-micrometer-core'
    implementation 'io.micronaut.micrometer:micronaut-micrometer-registry-datadog'
    implementation 'io.micronaut.flyway:micronaut-flyway'
    implementation 'io.micronaut.sql:micronaut-jdbc-hikari'
    implementation 'io.micronaut.data:micronaut-data-jdbc'
    implementation 'io.micronaut.beanvalidation:micronaut-hibernate-validator'
    implementation 'io.micronaut.kotlin:micronaut-kotlin-extension-functions'
    implementation 'io.micronaut.rabbitmq:micronaut-rabbitmq'


    runtimeOnly 'ch.qos.logback:logback-classic'
    runtimeOnly 'com.fasterxml.jackson.module:jackson-module-kotlin'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'io.micronaut.test:micronaut-test-junit5:' + micronautVersion
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testRuntimeOnly 'org.testcontainers:mariadb:' + testcontainersVersion
}

test {
    useJUnitPlatform()
}
