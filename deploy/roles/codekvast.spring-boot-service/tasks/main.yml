---
- name: Create Datadog config directory for Codekvast
  file: path=/etc/datadog-agent/conf.d/codekvast.d state=directory

- name: Copy config fragments to Datadog config directory
  template: src=datadog/{{ item.src }} dest=/etc/datadog-agent/conf.d/codekvast.d/{{ item.dest }}
  with_items:
  - src: 0-logs.fragment
    dest: 0-logs.fragment
  - src: service.fragment
    dest: "{{ service_name }}.fragment"

- name: Assemble the Datadog config file
  assemble:
    src: /etc/datadog-agent/conf.d/codekvast.d/
    regexp: "\\.fragment$"
    dest: /etc/datadog-agent/conf.d/codekvast.d/conf.yaml
    backup: yes
  notify: restart datadog-agent

- name: Lookup the private DNS name for the database server
  set_fact: database_dns_names="{{ groups[database_group_name]|map('extract', hostvars, 'ec2_private_dns_name')|list }}"

- name: Setting timezone to UTC
  timezone: name=UTC

- name: Install OpenJDK 8
  package: name=openjdk-8-jdk-headless state=present
  notify: "restart codekvast service"

- name: Create codekvast group
  group: name=codekvast state=present

- name: Create codekvast user
  user: name=codekvast group=codekvast state=present home=/opt/codekvast

- name: Create directories
  file: path={{ item }} state=directory owner=codekvast group=codekvast
  with_items:
  - "/opt/codekvast/{{ service_name }}"
  - "/var/log/codekvast/{{ service_name }}"

- name: "Install codekvast-{{ service_name }}-{{ codekvastVersion }}-all.jar"
  copy:
    src: ../../product/{{ service_name }}/build/libs/codekvast-{{ service_name }}-{{ codekvastVersion }}-all.jar
    dest: "/opt/codekvast/{{ service_name }}/codekvast-{{ service_name }}-{{ codekvastVersion }}-all.jar"
    owner: codekvast
    group: codekvast
    mode: 0700
  notify: "restart codekvast service"

- name: "Install /opt/codekvast/{{ service_name }}/application.yml"
  template:
    src: "codekvast/{{ service_name }}/application.yml"
    dest: "/opt/codekvast/{{ service_name }}/application.yml"
    owner: codekvast
    group: codekvast
  notify: "restart codekvast service"

- name: "Install /etc/systemd/system/codekvast-{{ service_name }}.service"
  template:
    src: "systemd.service"
    dest: "/etc/systemd/system/codekvast-{{ service_name }}.service"
    owner: root
    group: root
  notify:
  - systemctl daemon-reload
  - "restart codekvast service"

- name: "Install /opt/codekvast/codekvast-javaagent-{{ codekvastVersion }}.jar"
  copy:
    src: ../../product/java-agent/build/libs/codekvast-javaagent-{{ codekvastVersion }}.jar
    dest: "/opt/codekvast/codekvast-javaagent-{{ codekvastVersion }}.jar"
    owner: codekvast
    group: codekvast
    mode: 0700
  notify: "restart codekvast service"

- name: "Install dest=/opt/codekvast/{{ service_name }}/codekvast-agent.properties"
  template:
    src: codekvast-agent.properties
    dest: /opt/codekvast/{{ service_name }}/codekvast-agent.properties
    owner: codekvast
    group: codekvast
  notify: "restart codekvast service"

- name: "Enable codekvast-{{ service_name }}"
  service:
    name: "codekvast-{{ service_name }}"
    enabled: yes

- name: "Start codekvast-{{ service_name }}"
  service:
    name: "codekvast-{{ service_name }}"
    state: started

- meta: flush_handlers

- name: "Wait until codekvast-{{ service_name }} has started"
  wait_for:
    port: "{{ service_port }}"
    state: started
    timeout: 30
