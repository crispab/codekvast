---
#---------------------------------------------------------------
# Playbook which provisions the AWS infrastructure
#---------------------------------------------------------------
- name: AWS infrastructure stack
  hosts: all[0]
  connection: local
  gather_facts: no

  vars_files:
    - vars/common.yml
    - vars/secrets.yml

  vars:
    static_web_sites:
#    - name: 'test.codekvast.io'
#      region: 'eu-central-1'
#      env: 'staging'
    - name: 'downloads.codekvast.io'
      region: 'eu-central-1'
    - name: 'www.codekvast.io'
      region: 'eu-central-1'
    - name: 'codekvast.io'
      region: 'eu-central-1'
      viewer_protocol_policy: 'allow-all'
      redirect_to: 'https://www.codekvast.io'

    cloudfront_zone_id: 'Z2FDTNDATAQYW2'
    route53:
        zone_id:
            cloudfront: 'Z2FDTNDATAQYW2'

    email_dns_records:
    - name: '7gs2gnhqp5ao2xoef4gv3vpr54ckn3zq._domainkey.codekvast.io'
      value: '7gs2gnhqp5ao2xoef4gv3vpr54ckn3zq.dkim.amazonses.com'
      owner: 'AWS Simple Email Services'
    - name: 'ayjc6qn6thqgrnu4bcjt5ugslxhkbrjb._domainkey.codekvast.io'
      value: 'ayjc6qn6thqgrnu4bcjt5ugslxhkbrjb.dkim.amazonses.com'
      owner: 'AWS Simple Email Services'
    - name: 'gepcir4h22qqcmdpxogxyg3tuvteeedv._domainkey.codekvast.io'
      value: 'gepcir4h22qqcmdpxogxyg3tuvteeedv.dkim.amazonses.com'
      owner: 'AWS Simple Email Services'
    - name: '_amazonses.codekvast.io'
      type: TXT
      value:
        - '"eieDOHvpRK2mPPjSTt2A8FJC2U+/dBAsrLzoaxvAW6Y="' # Frankfurt
        - '"ANhwmN6zcU+GrPdkurz7p3HwZiQBRlnqsH5k/23s/CY="' # Ireland
      owner: 'AWS Simple Email Services'
    - name: 'codekvast.io'
      type: MX
      value: '10 inbound-smtp.eu-west-1.amazonaws.com'
      owner: 'AWS Simple Email Services'

    other_dns_records:
    - name: '_d60ed2fdbf07f3f631a87cbe4b31da89.codekvast.io'
      value: '_1f2bc564036706f4ddbb398053c86ab4.acm-validations.aws'
      owner: 'AWS Certificate Manager'

  tasks:
  - name: Create S3 buckets for static websites
    s3_bucket:
      profile: codekvast
      region: "{{ item.region }}"
      name: "{{ item.name }}"
      policy: "{{ lookup('file', 's3-public-web-site.json') | replace('#bucket-name#', item.name) }}"
      tags:
        Owner: Codekvast
    connection: local
    with_items: "{{ static_web_sites }}"
    loop_control:
      label: "{{ item.name }}"
    tags: static-web-sites

  - name: Enable S3 support for static websites
    s3_website:
      profile: codekvast
      region: "{{ item.region }}"
      name: "{{ item.name }}"
      redirect_all_requests: "{{ item.redirect_to | default(omit) }}"
      state: present
    connection: local
    with_items: "{{ static_web_sites }}"
    loop_control:
      label: "{{ item.name }}"
    tags: static-web-sites

  - name: Configure CloudFront distributions for static websites
    cloudfront_distribution:
      profile: codekvast
      region: "{{ item.region }}"
      alias: "{{ item.name }}"
      ipv6_enabled: yes
      price_class: 'PriceClass_100'
      origins:
          - id: "S3-{{ item.name }}"
            domain_name: "{{ item.name }}.s3-website.{{ item.region }}.amazonaws.com"
            custom_origin_config:
              origin_protocol_policy: "http-only"
# TODO: Make this work. Currently (2019-02-23) this causes a 500 Server Side error in the AWS API.
#      viewer_certificate:
#          cloud_front_default_certificate: False
#          acm_certificate_arn: "{{ ssl_certificates['us-east-1'] }}"
      default_cache_behavior:
          viewer_protocol_policy: 'redirect-to-https'
      tags:
        Owner: Codekvast
        Env: "{{ item.env | default('prod') }}"
    connection: local
    with_items: "{{ static_web_sites }}"
    loop_control:
      label: "{{ item.name }}"
    register: cf
    tags: static-web-sites

  - debug: var=cf
    tags: static-web-sites

  - name: Create DNS aliases for CloudFront distributions
    route53:
      profile: codekvast # in ~/.boto
      zone: codekvast.io
      command: create
      overwrite: yes
      type: "{{ item[0] }}"
      alias: True
      alias_hosted_zone_id: "{{ cloudfront_zone_id }}"
      record: "{{ item[1].item.name }}"
      value: "{{ item[1].domain_name }}"
      ttl: 7200
    connection: local
    with_nested:
        - [ "A", "AAAA"]
        - "{{ cf.results }}"
    loop_control:
        label: "{{ item[0] }}: {{ item[1].item.name }} -> {{ item[1].domain_name }}"
    tags: static-web-sites

  - name: Create email-related DNS records
    route53:
      profile: codekvast # in ~/.boto
      zone: codekvast.io
      command: "{{ item.command | default('create') }}"
      overwrite: yes
      record: "{{ item.name }}"
      ttl: 86400
      type: "{{ item.type | default('CNAME') }}"
      value: "{{ item.value }}"
      alias: "{{ item.alias | default(False) }}"
      alias_hosted_zone_id: "{{ item.alias_zone_id | default(None) }}"
    connection: local
    with_items: "{{ email_dns_records }}"
    loop_control:
      label: "{{ item.type | default('CNAME') }} {{ item.name }} -> {{ item.value }}"
    tags: [email, dns]

  - name: Create other DNS records
    route53:
      profile: codekvast # in ~/.boto
      zone: codekvast.io
      command: "{{ item.command | default('create') }}"
      overwrite: yes
      record: "{{ item.name }}"
      ttl: 86400
      type: "{{ item.type | default('CNAME') }}"
      value: "{{ item.value }}"
      alias: "{{ item.alias | default(False) }}"
      alias_hosted_zone_id: "{{ item.alias_zone_id | default(None) }}"
    connection: local
    with_items: "{{ other_dns_records }}"
    loop_control:
      label: "{{ item.type | default('CNAME') }} {{ item.name }} -> {{ item.value }}"
    tags: dns

  - name: Create AWS stacks
    include_role: name=codekvast.aws-stack
    with_items: "{{ aws_stacks }}"
    loop_control:
      loop_var: stack
    tags: infra

  - name: Create S3 buckets for incoming mail
    s3_bucket:
        profile: codekvast
        region: "eu-central-1"
        name: "mailbox.codekvast.io"
        policy: "{{ lookup('file', 's3-mailbox.json') }}"
        tags:
            Owner: Codekvast
    connection: local
    tags: email

  - name: Run 'npm ci' for aws-ses-forwarder
    shell: npm ci chdir="files/aws-ses-forwarder"
    connection: local
    tags: [email, email-forwarder, lambda]

  - name: Create aws-ses-forwarder.zip
    archive:
        path: "files/aws-ses-forwarder/"
        dest: /tmp/aws-ses-forwarder.zip
        format: zip
    connection: local
    tags: [email, email-forwarder, lambda]

  - name: Install email forwarder lambda
    lambda:
        profile: codekvast
        region: "eu-west-1"
        name: "mail-forwarder"
        role: "arn:aws:iam::186662504461:role/Mail-forwarder"
        handler: "index.handler"
        runtime: "nodejs8.10"
        zip_file: "/tmp/aws-ses-forwarder.zip"
        tags:
            Owner: Codekvast
    connection: local
    tags: [email, email-forwarder, lambda]
