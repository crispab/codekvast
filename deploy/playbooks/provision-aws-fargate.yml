---
#---------------------------------------------------------------
# Playbook which provisions the AWS Fargate infrastructure
#---------------------------------------------------------------
- name: AWS Fargate
  hosts: all[0]
  connection: local
  gather_facts: no

  vars_files:
    - vars/common.yml
    - vars/secrets.yml

  vars:
    env: staging
    services:
      - backoffice
      - dashboard
      - login

  tasks:
    - name: "Find EC2 subnets for {{ env }}"
      ec2_vpc_subnet_info:
        profile: codekvast
        region: "{{ aws_region }}"
        filters:
          "tag:Owner": "Codekvast"
          "tag:Env": "{{ env }}"
      register: subnet_info

    - debug: var=subnet_info
      when: _debug is defined and _debug

    - name: "Store MariaDB application password"
      aws_ssm_parameter_store:
        profile: codekvast
        region: "{{ aws_region }}"
        description: "Codekvast database application password"
        name: "mariadb_application_password"
        value: "{{ mariadb_application_password }}"
        string_type: "SecureString"
        overwrite_value: "always"

    - name: "Create ECR registries"
      ecs_ecr:
        name: "codekvast/{{ item }}"
        profile: codekvast
        region: "{{ aws_region }}"
        state: present
      loop: "{{ services }}"

    - name: "Define ECS cluster"
      ecs_cluster:
        profile: codekvast
        region: "{{ aws_region }}"
        name: "codekvast-{{ env }}"
        state: present

    - name: "Define the ECS tasks"
      ecs_taskdefinition:
        profile: codekvast
        region: "{{ aws_region }}"
        cpu: "256"
        memory: "512"
        family: "codekvast-{{ item }}"
        launch_type: FARGATE
        network_mode: awsvpc
        state: present
        execution_role_arn: "arn:aws:iam::{{ aws_account }}:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS"
        containers:
          - name: "{{ item }}"
            image: "{{ aws_account }}.dkr.ecr.{{ aws_region}}.amazonaws.com/codekvast/{{ item }}:latest"
            essential: true
            secrets:
              - name: "SPRING_DATASOURCE_PASSWORD"
                valueFrom: "arn:aws:ssm:{{ aws_region }}:{{ aws_account }}:parameter/codekvast/mariadb_application_password"
            environment:
              - {name: SPRING_DATASOURCE_URL, value: "db-{{ env }}.codekvast.io" }
              - {name: SPRING_RABBITMQ_ADDRESSES, value: "{{ rabbitmq[env].url }}" }
            ports:
              - "8080"
              - "9080"
      loop: "{{ services }}"
      register: ecs_taskdefs

    - debug: var=ecs_taskdefs
      when: _debug is defined and _debug

    - name: "Find application load balancer"
      elb_application_lb_info:
        profile: codekvast
        region: "{{ aws_region }}"
        names: "Codekvast-default-{{ env }}"
      register: lb_info

    - debug: var=lb_info
      when: _debug is defined and _debug

    - name: "Find target groups"
      elb_target_group_info:
        profile: codekvast
        region: "{{ aws_region }}"
        load_balancer_arn: "{{ lb_info.load_balancers[0].load_balancer_arn }}"
      register: tg_info

    - debug: var=tg_info
      when: _debug is defined and _debug

    - name: Define ECS services
      ecs_service:
        profile: codekvast
        region: "{{ aws_region }}"
        cluster: "codekvast-{{ env }}"
        desired_count: 2
        launch_type: FARGATE
        load_balancers:
          - loadBalancerName: "Codekvast-default-{{ env }}"
            targetGroupArn: ""
            containerName: "{{ item }}"
            containerPort: 8080
        name: "{{ item }}"
        task_definition: "{{ item }}"
        network_configuration:
          assign_public_ip: yes
          subnets: "{{ subnet_info.subnets|map(attribute='id')|list }}"
          security_groups:
            - "codekvast-default-{{ env }}-backend"
            - "codekvast-default-{{ env }}-management"
        state: present
      loop: "{{ services }}"

