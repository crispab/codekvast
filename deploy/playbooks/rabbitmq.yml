---
#-----------------------------------------------------------------------------------------------------------
# Playbook that installs RabbitMQ
#-----------------------------------------------------------------------------------------------------------
-   name:   RabbitMQ
    hosts:  tag_role_database

    become: yes

    vars_files:
    - vars/secrets.yml
    - vars/common.yml

    vars:
        rabbitmq_version:  "3.8.0"
        rabbitmq_data_dir: "/data/rabbitmq"

    roles:
    - Datadog.datadog

    post_tasks:
    -   name: Define RABBITMQ_NODENAME
        lineinfile:
          line: RABBITMQ_NODENAME=rabbit@localhost
          path: /etc/environment

    -   name: Install RabbitMQ APT signing key
        apt_key:
            id:        '0x6B73A36E6026DFCA'
            keyserver: hkps.pool.sks-keyservers.net
            state:     present

    -   name: Install apt-transport-https
        apt:  name=apt-transport-https state=present

    -   name: Define APT source for Erlang
        apt_repository:
            filename:     bintray.erlang
            repo:         "deb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang-22.x"
            state:        present

    -   name: Define APT source for RabbitMQ
        apt_repository:
            filename:     bintray.rabbitmq
            repo:         "deb https://dl.bintray.com/rabbitmq/debian bionic main"
            state:        present

    -   set_fact:
            rabbit_packages:
            - erlang-base
            - erlang-asn1
            - erlang-crypto
            - erlang-eldap
            - erlang-ftp
            - erlang-inets
            - erlang-mnesia
            - erlang-os-mon
            - erlang-parsetools
            - erlang-public-key
            - erlang-runtime-tools
            - erlang-snmp
            - erlang-ssl
            - erlang-syntax-tools
            - erlang-tftp
            - erlang-tools
            - erlang-xmerl
            - rabbitmq-server

    -   name: Install Erlang and RabbitMQ packages
        apt:  name={{ rabbit_packages }} state=present update_cache=yes

    -   name: Create /etc/rabbitmq/
        file: path=/etc/rabbitmq/ state=directory

    -   name:     "Install /etc/rabbitmq/rabbitmq*.conf"
        template: src=rabbitmq/{{ item }} dest=/etc/rabbitmq/{{ item }}
        with_items:
        - rabbitmq.conf
        - rabbitmq-env.conf
        notify:   restart rabbitmq-server

    -   name: "Create {{ rabbitmq_data_dir }}"
        file:
            path:  "{{ rabbitmq_data_dir }}"
            state: directory
            owner: rabbitmq
            group: rabbitmq

    -   name:    Enable and start RabbitMQ
        service: name=rabbitmq-server state=started enabled=yes

    -   name:       Enable RabbitMQ plugins
        command:    rabbitmq-plugins enable --silent --{{ item[1] }} {{ item[0] }}
        with_nested:
        - [rabbitmq_management]
        - [offline, online]

    -   name:    Define Datadog user
        command: rabbitmqctl add_user datadog {{ rabbitmq_datadog_password }}
        ignore_errors: yes

    -   name:    Set Datadog permissions
        command: rabbitmqctl set_permissions datadog "^aliveness-test$" "^amq\.default$" ".*"

    -   name:    Give Datadog user monitoring rights
        command: rabbitmqctl set_user_tags datadog monitoring

    -   name:   Make sure Datadog Agent can tail RabbitMQ log files
        user:   name=dd-agent groups=adm append=yes
        notify: restart datadog-agent

    -   name:     Configure Datadog Agent for RabbitMQ
        template: src=rabbitmq/datadog/conf.yaml dest=/etc/datadog-agent/conf.d/rabbitmq.d/conf.yaml mode=644
        notify:   restart datadog-agent

    handlers:
    -   name:    restart rabbitmq-server
        service: name=rabbitmq-server state=restarted

    -   name:    restart datadog-agent
        service: name=datadog-agent state=restarted
