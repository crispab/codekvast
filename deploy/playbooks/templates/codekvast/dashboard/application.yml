codekvast:
    dashboardBaseUrl: "https://{{ ec2_tag_LBCNAME2 }}"
    dashboardJwtExpirationHours: "{{ codekvast_dashboardJwtExpirationHours }}"
    dashboardJwtSecret: "{{ codekvast_dashboardJwtSecret }}"
    dnsCname: "{{ ec2_tag_CNAME2 }}"
    environment: "{{ ec2_tag_Env }}"
    fileImportIntervalSeconds: "{{ fileImportIntervalSeconds }}"
    loginBaseUrl: "https://{{ ec2_tag_LBCNAME1 }}"
    queuePath: "{{ queuePath }}"
    slackWebHookToken: "{{ codekvast_slackWebhookToken }}"
logging:
    file: "/var/log/codekvast/{{ service_name }}/application.log"
    file.max-size: '10MB'
    file.max-history: 10
    level:
        io.codekvast: DEBUG
        io.micrometer.datadog.DatadogMeterRegistry: OFF
    pattern.level: "{{ ec2_tag_CNAME0.split('.', 1)[0] }} %5p"

management:
    server.port: "{{ management_port }}"
    endpoint:
        beans.enabled: false
        conditions.enabled: false
        mappings.enabled: false
    metrics.export.datadog:
        api-key: "{{ datadog_api_key }}"
        enabled: true
        step: PT60S

server:
    port: "{{ service_port }}"
    servlet.session.cookie.name: "{{ settings.session.cookie.name }}"
    undertow.accesslog:
    file: "/var/log/codekvast/{{ service_name }}/"
        prefix: access.
spring:
    boot.admin.client:
        url: "http://{{ database_dns_names[0] }}:8080"
        instance:
            management-base-url: "http://{{ ec2_tag_CNAME }}:{{ management_port }}"
            service-base-url: "http://{{ ec2_tag_CNAME }}:{{ service_port }}"
    datasource:
        password: "{{ mysql_application_password }}"
        url: "jdbc:mariadb://{{ database_dns_names[0] }}/codekvast"
