# {{ ansible_managed }}

codekvast:
  common:
    dashboardBaseUrl: "https://{{ tags.LBCNAME2 }}"
    jwtExpirationHours: "{{ codekvast_jwtExpirationHours }}"
    jwtSecret: "{{ codekvast_jwtSecret }}"
    dnsCname: "{{ tags.CNAME1 }}"
    environment: "{{ tags.Env }}"
    slackWebHookToken: "{{ codekvast_slackWebhookToken }}"
  login:
    cipherSecret: "{{ codekvast_cipherSecret }}"
    herokuApiPassword: "{{ codekvast_herokuApiPassword }}"
    herokuApiSsoSalt: "{{ codekvast_herokuApiSsoSalt }}"
    herokuCodekvastUrl: "https://{{ tags.LBCNAME0 }}"
    herokuOAuthClientId: "{{ codekvast_herokuOAuthClientId }}"
    herokuOAuthClientSecret: "{{ codekvast_herokuOAuthClientSecret }}"

logging:
  file:
    name: "/var/log/codekvast/{{ service_name }}/application.log"
    max-size: '10MB'
    max-history: 10
  level:
    io.codekvast: "{{ 'DEBUG' if tags.Env == 'staging' else 'INFO' }}"
    io.micrometer.datadog.DatadogMeterRegistry: OFF

management:
  server.port: "{{ management_port }}"
  endpoint:
    beans.enabled: false
    conditions.enabled: false
    mappings.enabled: false
  metrics:
    tags:
      service: "codekvast-{{ service_name }}"
      env: "{{ tags.Env }}"
      host: "{{ tags.CNAME1 }}"
    export.datadog:
      api-key: "{{ datadog_api_key }}"
      enabled: true
      step: PT60S

server:
  port: "{{ service_port }}"
  undertow.accesslog:
    dir: "/var/log/codekvast/{{ service_name }}/"
    prefix: access.

spring:
  datasource:
    password: "{{ mariadb_application_password }}"
    url: "jdbc:mariadb://db-{{ tags.Env }}.codekvast.io/codekvast"

  rabbitmq:
    addresses: "{{ rabbitmq[tags.Env].url }}"
    template:
      retry:
        enabled: true
        initial-interval: 2s

  security.oauth2.client:
    registration:
      facebook:
        client-id: "{{ facebook.oauth[env].clientId }}"
        client-secret: "{{ facebook.oauth[env].clientSecret }}"
        client-scope: email
      github:
        client-id: "{{ github.oauth[env].clientId }}"
        client-secret: "{{ github.oauth[env].clientSecret }}"
        client-scope: email
      google:
        client-id: "{{ google.oauth[env].clientId }}"
        client-secret: "{{ google.oauth[env].clientSecret }}"
        client-scope: email
