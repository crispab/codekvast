codekvast:
    cipherSecret: "{{ codekvast_cipherSecret }}"
    dashboardBaseUrl: "https://{{ ec2_tag_LBCNAME2 }}"
    dashboardJwtExpirationHours: "{{ codekvast_dashboardJwtExpirationHours }}"
    dashboardJwtSecret: "{{ codekvast_dashboardJwtSecret }}"
    dnsCname: "{{ ec2_tag_CNAME1 }}"
    herokuApiPassword: "{{ codekvast_herokuApiPassword }}"
    herokuApiSsoSalt: "{{ codekvast_herokuApiSsoSalt }}"
    herokuCodekvastUrl: "https://{{ ec2_tag_LBCNAME0 }}"
    herokuOAuthClientId: "{{ codekvast_herokuOAuthClientId }}"
    herokuOAuthClientSecret: "{{ codekvast_herokuOAuthClientSecret }}"
    slackWebHookToken: "{{ codekvast_slackWebhookToken }}"

logging:
    file: /var/log/codekvast/application.log
    level:
        io.codekvast: DEBUG
        io.micrometer.cloudwatch.CloudWatchMeterRegistry: OFF
    pattern.level: "{{ ec2_tag_CNAME1.split('.', 1)[0] }} %5p"

management:
    server.port: "{{ management_port }}"
    endpoint:
        beans.enabled: false
        conditions.enabled: false
        mappings.enabled: false
    metrics.export.cloudwatch:
        aws-access-key-id: "{{ cloudwatch.metrics.access_key }}"
        aws-region: "{{ aws_region }}"
        aws-secret-key: "{{ cloudwatch.metrics.secret_key }}"
        batch-size: 100
        enabled: false
        namespace: "Codekvast {{ env }}"
        step: PT60S

server:
    port: "{{ service_port }}"
    servlet.session.cookie.name: "{{ settings.session.cookie.name }}"
    undertow.accesslog:
        dir: /var/log/codekvast/
        prefix: access.

spring:
    boot.admin.client:
        url: "http://{{ database_dns_names[0] }}:8080"
        instance:
            management-base-url: "http://{{ ec2_tag_CNAME }}:{{ management_port }}"
            service-base-url: "http://{{ ec2_tag_CNAME }}:{{ service_port }}"
    datasource:
        password: "{{ mysql_application_password }}"
        url: "jdbc:mariadb://{{ database_dns_names[0] }}/codekvast"

    security.oauth2.client:
        registration:
            facebook:
                client-id: "{{ facebook.oauth[env].clientId }}"
                client-secret: "{{ facebook.oauth[env].clientSecret }}"
                client-scope: email
            github:
                client-id: "{{ github.oauth[env].clientId }}"
                client-secret: "{{ github.oauth[env].clientSecret }}"
                client-scope: email
            google:
                client-id: "{{ google.oauth[env].clientId }}"
                client-secret: "{{ google.oauth[env].clientSecret }}"
                client-scope: email
        provider:
            facebook:
                user-info-uri: https://graph.facebook.com/me?fields=id,name,email
