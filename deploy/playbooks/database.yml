---
#-----------------------------------------------------------------------------------------------------------
# Playbook that installs the Codekvast Database, which is served by MariaDB
#-----------------------------------------------------------------------------------------------------------
- name: Codevast Database Server
  hosts: tag_role_database
  user: ubuntu
  become: yes

  vars_files:
  - vars/secrets.yml
  - vars/common.yml

  vars:
    service_name: mariadb
    server_type: database

    mysql_origin: 'default'
    mysql_vendor: 'mariadb'
    mariadb_version: '10.1'
    mysql_backup_dir: '/var/backups/mariadb'
    mysql_bind_address: '0.0.0.0'
    mysql_extra_configuration:
      character_set_server: 'utf8'
      collation_server: 'utf8_general_ci'
    mysql_datadir: /data/mysql
    mysql_databases:
    - codekvast

    mysql_users:
    - name: 'codekvast'
      password: '{{ mysql_application_password }}'
      priv: codekvast.*:ALL
      host: '%'

  pre_tasks:
  - name: Create a partition table for /dev/xvdf
    parted: device=/dev/xvdf number=1 state=present
    register: partition_table

  - debug: var=partition_table
    when: _debug is defined and _debug

  - name: Create ext4 file system on /dev/xvdf
    filesystem: dev=/dev/xvdf1 fstype=ext4
    register: fs

  - debug: var=fs
    when: _debug is defined and _debug

  - name: "Create the directory /data"
    file: path=/data state=directory

  - name: "Mount /dev/xvdf1 on /data"
    mount: src=/dev/xvdf1 path=/data state=mounted fstype=ext4

  - name: "Move old MariaDB databases from /var/lib/mysql to {{ mysql_datadir }}"
    command: mv /var/lib/mysql {{ mysql_datadir }} creates={{ mysql_datadir }} removes=/var/lib/mysql

  roles:
  - {role: Datadog.datadog, tags: [metrics, datadog] }
  - {role: HanXHX.mysql, tags: mariadb}

  post_tasks:
  - set_fact:
      customer: "{{ hostvars[inventory_hostname]['ec2_tag_Customer'] }}"
      env: "{{ hostvars[inventory_hostname]['ec2_tag_Env'] }}"
      s3_bucket_location: "{{ hostvars[inventory_hostname]['ec2_region'] }}"

  - set_fact:
      s3_database_backup_bucket: "io.codekvast.{{ customer|lower }}.{{ env|lower }}.backup"

  - name: Install s3cmd
    package: name=s3cmd state=present

  - name: Install backup scripts
    template: src=database/{{ item }}.j2 dest=/root/{{ item }} mode=755
    with_items:
    - mariadb-backup
    - mariadb-restore
    - s3cfg

  - name: Check S3 access credentials
    shell: s3cmd --config=/root/s3cfg ls s3://{{ s3_database_backup_bucket }}
    changed_when: False

  - name: Link /root/mariadb-backup to /etc/cron.daily
    file: src=/root/mariadb-backup dest=/etc/cron.daily/mariadb-backup state=link

  - name: Create MySQL user for Datadog
    shell: mysql -e "{{ item }};"
    ignore_errors: yes
    with_items:
    - "CREATE USER 'datadog'@'localhost' IDENTIFIED BY '{{ mysql_datadog_password }}'"
    - "GRANT REPLICATION CLIENT ON *.* TO 'datadog'@'localhost' WITH MAX_USER_CONNECTIONS 5"
    - "GRANT PROCESS ON *.* TO 'datadog'@'localhost'"
    - "GRANT SELECT ON performance_schema.* TO 'datadog'@'localhost'"
    notify: restart datadog-agent

  - name: Configure Datadog Agent for MariaDB
    template: src=database/datadog/config.yaml.j2 dest=/etc/datadog-agent/conf.d/mysql.d/conf.yaml mode=644
    notify: restart datadog-agent
